Component: ARM Compiler 5.06 update 3 (build 300) Tool: armlink [4d35c9]

==============================================================================

Section Cross References

    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.NMI_Handler) for NMI_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.HardFault_Handler) for HardFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.MemManage_Handler) for MemManage_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.BusFault_Handler) for BusFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    stm32f10x_gpio.o(i.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(i.GPIO_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(i.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    main.o(i.Delay_Ms) refers to main.o(.data) for TimingDelay
    main.o(i.debug) refers to led.o(i.LED_Control) for LED_Control
    main.o(i.debug) refers to lcd.o(i.LCD_DisplayStringLine) for LCD_DisplayStringLine
    main.o(i.debug) refers to main.o(i.Delay_Ms) for Delay_Ms
    main.o(i.main) refers to lcd.o(i.STM3210B_LCD_Init) for STM3210B_LCD_Init
    main.o(i.main) refers to led.o(i.LED_Init) for LED_Init
    main.o(i.main) refers to lcd.o(i.LCD_Clear) for LCD_Clear
    main.o(i.main) refers to lcd.o(i.LCD_SetBackColor) for LCD_SetBackColor
    main.o(i.main) refers to lcd.o(i.LCD_SetTextColor) for LCD_SetTextColor
    main.o(i.main) refers to lcd.o(i.LCD_DisplayStringLine) for LCD_DisplayStringLine
    main.o(i.main) refers to main.o(i.Delay_Ms) for Delay_Ms
    main.o(i.main) refers to main.o(i.debug) for debug
    main.o(i.main) refers to system_stm32f10x.o(.data) for SystemCoreClock
    stm32f10x_it.o(i.SysTick_Handler) refers to main.o(.data) for TimingDelay
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    lcd.o(i.LCD_BusIn) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    lcd.o(i.LCD_BusOut) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    lcd.o(i.LCD_Clear) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_Clear) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_Clear) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_ClearLine) refers to lcd.o(i.LCD_DisplayStringLine) for LCD_DisplayStringLine
    lcd.o(i.LCD_CtrlLinesConfig) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    lcd.o(i.LCD_CtrlLinesConfig) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    lcd.o(i.LCD_CtrlLinesConfig) refers to lcd.o(i.LCD_BusOut) for LCD_BusOut
    lcd.o(i.LCD_DisplayChar) refers to lcd.o(i.LCD_DrawChar) for LCD_DrawChar
    lcd.o(i.LCD_DisplayChar) refers to lcd.o(.constdata) for ASCII_Table
    lcd.o(i.LCD_DisplayOff) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_DisplayOn) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_DisplayStringLine) refers to lcd.o(i.LCD_DisplayChar) for LCD_DisplayChar
    lcd.o(i.LCD_DrawChar) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_DrawChar) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_DrawChar) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_DrawChar) refers to lcd.o(.data) for BackColor
    lcd.o(i.LCD_DrawCircle) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_DrawCircle) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_DrawCircle) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_DrawCircle) refers to lcd.o(.data) for TextColor
    lcd.o(i.LCD_DrawLine) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_DrawLine) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_DrawLine) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_DrawLine) refers to lcd.o(.data) for TextColor
    lcd.o(i.LCD_DrawMonoPict) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_DrawMonoPict) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_DrawMonoPict) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_DrawMonoPict) refers to lcd.o(.data) for BackColor
    lcd.o(i.LCD_DrawPicture) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_DrawPicture) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_DrawPicture) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.LCD_DrawRect) refers to lcd.o(i.LCD_DrawLine) for LCD_DrawLine
    lcd.o(i.LCD_PowerOn) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_PowerOn) refers to lcd.o(i.Delay_LCD) for Delay_LCD
    lcd.o(i.LCD_ReadRAM) refers to lcd.o(i.LCD_BusIn) for LCD_BusIn
    lcd.o(i.LCD_ReadRAM) refers to lcd.o(i.LCD_BusOut) for LCD_BusOut
    lcd.o(i.LCD_ReadReg) refers to lcd.o(i.LCD_BusIn) for LCD_BusIn
    lcd.o(i.LCD_ReadReg) refers to lcd.o(i.LCD_BusOut) for LCD_BusOut
    lcd.o(i.LCD_SetBackColor) refers to lcd.o(.data) for BackColor
    lcd.o(i.LCD_SetCursor) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_SetDisplayWindow) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_SetDisplayWindow) refers to lcd.o(i.LCD_SetCursor) for LCD_SetCursor
    lcd.o(i.LCD_SetTextColor) refers to lcd.o(.data) for TextColor
    lcd.o(i.LCD_WindowModeDisable) refers to lcd.o(i.LCD_SetDisplayWindow) for LCD_SetDisplayWindow
    lcd.o(i.LCD_WindowModeDisable) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_WriteBMP) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.LCD_WriteBMP) refers to lcd.o(i.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    lcd.o(i.LCD_WriteBMP) refers to lcd.o(i.LCD_WriteRAM) for LCD_WriteRAM
    lcd.o(i.REG_8230_Init) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.REG_8230_Init) refers to lcd.o(i.Delay_LCD) for Delay_LCD
    lcd.o(i.REG_932X_Init) refers to lcd.o(i.LCD_WriteReg) for LCD_WriteReg
    lcd.o(i.REG_932X_Init) refers to lcd.o(i.Delay_LCD) for Delay_LCD
    lcd.o(i.STM3210B_LCD_Init) refers to lcd.o(i.LCD_CtrlLinesConfig) for LCD_CtrlLinesConfig
    lcd.o(i.STM3210B_LCD_Init) refers to lcd.o(i.LCD_ReadReg) for LCD_ReadReg
    lcd.o(i.STM3210B_LCD_Init) refers to lcd.o(i.REG_8230_Init) for REG_8230_Init
    lcd.o(i.STM3210B_LCD_Init) refers to lcd.o(i.REG_932X_Init) for REG_932X_Init
    lcd.o(i.STM3210B_LCD_Init) refers to lcd.o(.data) for dummy
    led.o(i.LED_Control) refers to stm32f10x_gpio.o(i.GPIO_Write) for GPIO_Write
    led.o(i.LED_Control) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    led.o(i.LED_Control) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    led.o(i.LED_Control) refers to led.o(.data) for LED_Bit
    led.o(i.LED_Init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led.o(i.LED_Init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    led.o(i.LED_Init) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    led.o(i.LED_Init) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    key.o(i.ScanKey) refers to stm32f10x_gpio.o(i.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    key.o(i.ScanKey) refers to key.o(.data) for KeyStat
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_AFIODeInit), (20 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_DeInit), (200 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EXTILineConfig), (64 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputConfig), (32 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinLockConfig), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinRemapConfig), (144 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_StructInit), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_WriteBit), (10 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ADCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AdjustHSICalibrationValue), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_DeInit), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetClocksFreq), (212 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetFlagStatus), (60 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetITStatus), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSEConfig), (52 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK1Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLConfig), (28 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_SYSCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_USBCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp), (56 bytes).
    Removing stm32f10x_rcc.o(.data), (20 bytes).
    Removing system_stm32f10x.o(i.SystemCoreClockUpdate), (164 bytes).
    Removing lcd.o(i.LCD_ClearLine), (40 bytes).
    Removing lcd.o(i.LCD_DisplayOff), (12 bytes).
    Removing lcd.o(i.LCD_DisplayOn), (14 bytes).
    Removing lcd.o(i.LCD_DrawCircle), (256 bytes).
    Removing lcd.o(i.LCD_DrawLine), (92 bytes).
    Removing lcd.o(i.LCD_DrawMonoPict), (84 bytes).
    Removing lcd.o(i.LCD_DrawPicture), (48 bytes).
    Removing lcd.o(i.LCD_DrawRect), (66 bytes).
    Removing lcd.o(i.LCD_PowerOn), (118 bytes).
    Removing lcd.o(i.LCD_ReadRAM), (92 bytes).
    Removing lcd.o(i.LCD_SetDisplayWindow), (88 bytes).
    Removing lcd.o(i.LCD_WindowModeDisable), (28 bytes).
    Removing lcd.o(i.LCD_WriteBMP), (74 bytes).
    Removing key.o(i.KEY_Init), (2 bytes).
    Removing key.o(i.ScanKey), (508 bytes).
    Removing key.o(.data), (4 bytes).

64 unused section(s) (total 3370 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001ef0, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00001ed0, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO           19    RESET               startup_stm32f10x_md.o
    0x080000ec   0x00000008   Code   RO          831  * !!!main             c_w.l(__main.o)
    0x080000f4   0x00000002   Code   RO          858    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080000f6   0x00000000   Code   RO          865    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          867    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          870    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          872    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          874    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          877    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          879    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          881    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          883    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          885    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          887    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          889    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          891    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          893    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          895    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          897    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          901    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          903    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          905    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080000f6   0x00000000   Code   RO          907    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080000f6   0x00000002   Code   RO          908    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080000f8   0x00000002   Code   RO          928    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080000fa   0x00000000   Code   RO          941    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          943    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          946    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          949    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          951    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080000fa   0x00000000   Code   RO          954    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080000fa   0x00000002   Code   RO          955    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080000fc   0x00000000   Code   RO          833    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080000fc   0x00000000   Code   RO          835    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080000fc   0x00000006   Code   RO          847    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000102   0x00000000   Code   RO          837    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000102   0x00000004   Code   RO          838    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000106   0x00000000   Code   RO          840    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000106   0x00000008   Code   RO          841    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800010e   0x00000002   Code   RO          862    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000110   0x00000000   Code   RO          910    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000110   0x00000004   Code   RO          911    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000114   0x00000006   Code   RO          912    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800011a   0x00000002   PAD
    0x0800011c   0x00000040   Code   RO           20    .text               startup_stm32f10x_md.o
    0x0800015c   0x00000006   Code   RO          829    .text               c_w.l(heapauxi.o)
    0x08000162   0x0000004a   Code   RO          849    .text               c_w.l(sys_stackheap_outer.o)
    0x080001ac   0x00000012   Code   RO          851    .text               c_w.l(exit.o)
    0x080001be   0x00000002   PAD
    0x080001c0   0x00000008   Code   RO          859    .text               c_w.l(libspace.o)
    0x080001c8   0x0000000c   Code   RO          920    .text               c_w.l(sys_exit.o)
    0x080001d4   0x00000002   Code   RO          931    .text               c_w.l(use_no_semi.o)
    0x080001d6   0x00000000   Code   RO          933    .text               c_w.l(indicate_semi.o)
    0x080001d6   0x00000004   Code   RO          484    i.BusFault_Handler  stm32f10x_it.o
    0x080001da   0x00000002   Code   RO          485    i.DebugMon_Handler  stm32f10x_it.o
    0x080001dc   0x0000001e   Code   RO          586    i.Delay_LCD         lcd.o
    0x080001fa   0x00000002   PAD
    0x080001fc   0x00000014   Code   RO          421    i.Delay_Ms          main.o
    0x08000210   0x00000116   Code   RO           30    i.GPIO_Init         stm32f10x_gpio.o
    0x08000326   0x00000004   Code   RO           37    i.GPIO_ResetBits    stm32f10x_gpio.o
    0x0800032a   0x00000004   Code   RO           38    i.GPIO_SetBits      stm32f10x_gpio.o
    0x0800032e   0x00000004   Code   RO           40    i.GPIO_Write        stm32f10x_gpio.o
    0x08000332   0x00000004   Code   RO          486    i.HardFault_Handler  stm32f10x_it.o
    0x08000336   0x00000002   PAD
    0x08000338   0x00000024   Code   RO          587    i.LCD_BusIn         lcd.o
    0x0800035c   0x00000024   Code   RO          588    i.LCD_BusOut        lcd.o
    0x08000380   0x00000026   Code   RO          589    i.LCD_Clear         lcd.o
    0x080003a6   0x00000002   PAD
    0x080003a8   0x00000048   Code   RO          591    i.LCD_CtrlLinesConfig  lcd.o
    0x080003f0   0x00000028   Code   RO          592    i.LCD_DisplayChar   lcd.o
    0x08000418   0x0000002c   Code   RO          595    i.LCD_DisplayStringLine  lcd.o
    0x08000444   0x0000006c   Code   RO          596    i.LCD_DrawChar      lcd.o
    0x080004b0   0x0000005c   Code   RO          604    i.LCD_ReadReg       lcd.o
    0x0800050c   0x00000010   Code   RO          605    i.LCD_SetBackColor  lcd.o
    0x0800051c   0x00000018   Code   RO          606    i.LCD_SetCursor     lcd.o
    0x08000534   0x00000010   Code   RO          608    i.LCD_SetTextColor  lcd.o
    0x08000544   0x00000034   Code   RO          611    i.LCD_WriteRAM      lcd.o
    0x08000578   0x00000034   Code   RO          612    i.LCD_WriteRAM_Prepare  lcd.o
    0x080005ac   0x00000040   Code   RO          613    i.LCD_WriteReg      lcd.o
    0x080005ec   0x00000074   Code   RO          785    i.LED_Control       led.o
    0x08000660   0x00000058   Code   RO          786    i.LED_Init          led.o
    0x080006b8   0x00000004   Code   RO          487    i.MemManage_Handler  stm32f10x_it.o
    0x080006bc   0x00000002   Code   RO          488    i.NMI_Handler       stm32f10x_it.o
    0x080006be   0x00000002   Code   RO          489    i.PendSV_Handler    stm32f10x_it.o
    0x080006c0   0x00000020   Code   RO          225    i.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x080006e0   0x00000120   Code   RO          614    i.REG_8230_Init     lcd.o
    0x08000800   0x00000202   Code   RO          615    i.REG_932X_Init     lcd.o
    0x08000a02   0x00000002   PAD
    0x08000a04   0x00000038   Code   RO          616    i.STM3210B_LCD_Init  lcd.o
    0x08000a3c   0x00000002   Code   RO          490    i.SVC_Handler       stm32f10x_it.o
    0x08000a3e   0x00000008   Code   RO          552    i.SetSysClock       system_stm32f10x.o
    0x08000a46   0x00000002   PAD
    0x08000a48   0x000000e0   Code   RO          553    i.SetSysClockTo72   system_stm32f10x.o
    0x08000b28   0x00000010   Code   RO          491    i.SysTick_Handler   stm32f10x_it.o
    0x08000b38   0x00000060   Code   RO          555    i.SystemInit        system_stm32f10x.o
    0x08000b98   0x00000004   Code   RO          492    i.UsageFault_Handler  stm32f10x_it.o
    0x08000b9c   0x000000c0   Code   RO          422    i.debug             main.o
    0x08000c5c   0x000000a4   Code   RO          423    i.main              main.o
    0x08000d00   0x000011d0   Data   RO          617    .constdata          lcd.o
    0x08001ed0   0x00000000   Data   RO          986    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000680, Max: 0x00005000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW          424    .data               main.o
    0x20000004   0x00000014   Data   RW          556    .data               system_stm32f10x.o
    0x20000018   0x00000006   Data   RW          618    .data               lcd.o
    0x2000001e   0x00000002   Data   RW          787    .data               led.o
    0x20000020   0x00000060   Zero   RW          860    .bss                c_w.l(libspace.o)
    0x20000080   0x00000200   Zero   RW           18    HEAP                startup_stm32f10x_md.o
    0x20000280   0x00000400   Zero   RW           17    STACK               startup_stm32f10x_md.o

